dist: xenial
sudo: required
language:
  - generic
cache:
  - apt

# Configuration variables. All variables are global now, but this can be used
# to trigger a build matrix for different ROS distributions if desired.
env:
  global:
    - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

# Install system dependencies, namely a very barebones ROS setup.
before_install:
  - sudo apt-get update

# Create a catkin workspace with the package under integration.
install:
  - mkdir ~/install
  - ./install-deps ~/install SET-BASH

#before_script:

  # Compile and test (mark the build as failed if any step fails). If the
  # CATKIN_OPTIONS file exists, use it as an argument to catkin_make, for example
  # to blacklist certain packages.
  #
  # NOTE on testing: `catkin_make run_tests` will show the output of the tests
  # (gtest, nosetest, etc..) but always returns 0 (success) even if a test
  # fails. Running `catkin_test_results` aggregates all the results and returns
  # non-zero when a test fails (which notifies Travis the build failed).

#script:
#  - source /opt/ros/$ROS_DISTRO/setup.bash
#  - cd ~/catkin_ws
#  - catkin_make $( [ -f $CATKIN_OPTIONS ] && cat $CATKIN_OPTIONS )
# Run the tests, ensuring the path is set correctly.
#  - source devel/setup.bash
#  - catkin_make run_tests && catkin_test_results
